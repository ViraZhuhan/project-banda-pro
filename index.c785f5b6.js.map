{"mappings":"oeAAAA,EAAA,S,uDCAA,IAAAC,EAAAD,EAAA,SACA,MAAME,EAAO,CACXC,mBAAoBC,SAASC,cAAc,yBAEvCC,EAAY,IAAI,EAAAL,EAAAM,SAUfC,eAAeC,EAAwBC,GAC1C,IACE,MAAMC,QAAeL,EAAUM,cAE7BC,EAAM,EACNC,EAAM,GACNC,EAAsBC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,IAAMA,EAChEM,EAAgB,CAACT,EAAIU,QAAQL,IAC7BM,EAAOX,EAAIU,QAAQL,GAEEI,EAAcG,KAAIC,IAC3C,MAAMC,cACJA,EAAaC,eACbA,EAAcC,aACdA,EAAYC,aACZA,EAAYC,WACZA,EAAUC,WACVA,EAAUC,UACVA,EAASC,SACTA,GACER,EAcJ,MAAMS,EAAUX,EAAKS,UAErB,IAAIG,EAAa,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,GAAK,EAAG,CAC1C,MAAME,EAAOzB,EAAO0B,MAAKC,GAAMA,EAAGC,KAAOP,EAAQE,KACjDD,EAAWO,KAAKJ,EAAKK,K,CAG5B,MAAMC,EAAQrB,EAAKI,eACbkB,EAAWtB,EAAKG,cACpB,mCAAmCH,EAAKG,gBACxC,oDACIoB,EAzBD,SAAuBC,GACrBA,EAAOA,GAAQ,IAEf,MAAMC,EAAU,IAAIC,KAAKrB,GACzB,OACEoB,EAAQE,UACRH,EACAC,EAAQG,WACRJ,EACAC,EAAQI,a,CAgBEC,CAAc,KAC3BC,EAAc/B,EAAKM,aACnB0B,EAAYhC,EAAKO,WACjB0B,EAAUC,KAAKC,UAAUnC,EAAKkB,IAC9BkB,EAAUxB,EAAWyB,MAAM,EAAG,GAAGb,KAAK,MAE7C3C,EAAKC,mBAAmBwD,UAAY,2IAEYhB,WAAkBD,wMAGWA,kNAG6CE,2IACDQ,mDAA6DC,wLAGxDxB,wIACR4B,2HAI/E1B,2GAMvC,MAAM6B,EAAYxD,SAASC,cAAc,2BACnCwD,EAAM,eAELC,EAAY,CACjBpC,aAAckB,EACdL,GAAIe,EACJZ,MAAOA,E,WACPb,EACAF,aAAcyB,EACdW,YAAa1C,EAAK0C,YAClBnC,WAAWyB,EACXvB,UAAWE,E,SACXD,GAEF6B,EAAUI,iBAAiB,SAC3B,WACI,IACE,IAAIC,EAEDV,KAAKW,MAAMC,aAAaC,QAAQP,KAAS,GAI7C,OAHAI,EAAQzB,KAAKsB,GACbK,aAAaE,QAAQR,EAAKN,KAAKC,UAAUS,IAElCL,EAAUU,UAAW,C,CAC3B,MAAOC,GACPC,QAAQD,MAAMA,E,KAIpB,WACI,IACE,MAAME,EAASN,aAAaC,QAAQP,GAC9Ba,EAA6BnB,KAAKW,MAAMO,GAC9C,GAAgB,OAAZC,EACF,OAEFA,EAAQpD,KAAIqD,IACV,GAAIA,EAAIpC,KAAOuB,EAAUvB,GACvB,OAAOqB,EAAUU,UAAW,CAAI,G,CAIhC,MAAOC,GACPC,QAAQD,MAAMA,E,EAIlBK,EAAY,G,CAEd,M,EA/HGtE,EAAUuE,WAJhBC,KAAKrE,GACLsE,OAAMC,GAAMR,QAAQS,IAAID,EAAGE,WAC9BzE,ICTA,MAAM0E,EAAO/E,SAASC,cAAc,QAC9B+E,EAAShF,SAASiF,cAAc,OAChCC,EAAUlF,SAASiF,cAAc,OACvCD,EAAOG,UAAUC,IAAI,YACrBF,EAAQC,UAAUC,IAAI,WACtBJ,EAAOK,YAAYH,GACnBH,EAAKM,YAAYL,G","sources":["src/index.js","src/js/upcoming.js","src/js/loader.js"],"sourcesContent":["import './js/header';\nimport './js/mobile-menu';\nimport './js/themeToggle';\nimport './js/hero';\nimport './js/modal-empty';\nimport './js/modal_movie';\nimport './js/upcoming';\nimport './js/loader';\nimport './js/create-trends';\nimport './js/modal-team';\nimport './js/scroll-up'\n","import Api from './api';\nconst refs = {\n  galleryOfNewMovies: document.querySelector('.upcoming__container'),\n};\nconst newMovies = new Api();\n\nfetchUpcomingMovie()\n  .then(renderUpcomingMovieCard)\n  .catch(er => console.log(er.message));\nrenderUpcomingMovieCard();\nexport function fetchUpcomingMovie() {\n  return newMovies.upcoming();\n}\n\nexport async function renderUpcomingMovieCard(res) {\n    try {\n      const genres = await newMovies.fetchGenres();\n\n  const min = 0;\n  const max = 19;\n  const UpcomingMovieRandom = Math.floor(Math.random() * (max - min + 1)) + min;\n      const resultsRandom = [res.results[UpcomingMovieRandom]];\n      const data = res.results[UpcomingMovieRandom];\n  \n      const createUpcomingCard = resultsRandom.map(result => {\n        const {\n          backdrop_path,\n          original_title,\n          release_date,\n          vote_average,\n          vote_count,\n          popularity,\n          genre_ids,\n          overview,\n        } = result;\n        function getFormatDate(join) {\n          join = join || ' '; // разделитель по дефолту\n  \n          const release = new Date(release_date);\n          return (\n            release.getDate() +\n            join +\n            release.getMonth() +\n            join +\n            release.getFullYear()\n          );\n        }\n  \n        const idGenre = data.genre_ids;\n  \n        let nameGenres = [];\n        for (let i = 0; i < idGenre.length; i += 1) {\n          const item = genres.find(el => el.id === idGenre[i]);\n          nameGenres.push(item.name);\n        }\n  \n   const title = data.original_title;\n   const imageUrl = data.backdrop_path\n   ? `https://image.tmdb.org/t/p/w500/${data.backdrop_path}`\n   : 'https://via.placeholder.com/395x574?text=No+Image'; \n   const formatDate = getFormatDate('.');\n   const voteAverage = data.vote_average;\n   const voteCount = data.vote_count;\n   const movieId = JSON.stringify(data.id);\n   const genreUp = nameGenres.slice(0, 2).join(', ');\n  \n  refs.galleryOfNewMovies.innerHTML = ` <h2 class=\"upcoming__title\">Upcoming this month</h2>\n  <div class=\"upcoming__info\"> \n  <img src=\"https://image.tmdb.org/t/p/original/${imageUrl}\" alt=\"${title}\"  loading=\"lazy\" class=\"upcoming__img\" />\n  <div class=\"upcoming__info-btn\">\n  <div class=\"upcoming__info-layout\">\n  <h3 class =\"upcoming__movie-title\"><span class=\"upcoming__item-font-title\">${title}</span></h3>\n  <div class=\"upcoming__list-tablet\">\n  <ul class=\"upcoming__list\">\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-date\">Release date</span><span class=\"upcoming__item-data\">${formatDate}</span></li>\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-vote\">Vote/Votes </span><span class=\"upcoming__item-vote\">${voteAverage}</span>  /  <span class=\"upcoming__item-votes\">${voteCount}</span></li>\n  </ul>\n  <ul class=\"upcoming__list\">\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-popularity\">Popularity </span><span class=\"upcoming__item-pop\">${popularity}</span></li>\n  <li class =\"upcoming__item\"><span class=\"upcoming__item-font-genre\">Genre </span><span class=\"upcoming__item-genre\">${genreUp}</span></li>\n  </ul>\n  </div>\n  <p class =\"upcoming__movie-about\">About</p>\n  <p class=\"upcoming__item-font-about\">${overview}</p>\n  </div>\n  <button type=\"button\" class=\"upcoming__button\">Remind me</button>\n  </div>\n  </div>`;\n  \n  const remindBtn = document.querySelector('button.upcoming__button');\n  const KEY = 'LibraryMovie';\n  \n   const movieItem = {\n    release_date: formatDate,\n    id: movieId,\n    title: title,\n    popularity,\n    vote_average: voteAverage,\n    poster_path: data.poster_path,\n    vote_count:voteCount,\n    genre_ids: idGenre,\n    overview,\n  };\n  remindBtn.addEventListener('click', onClick);\n  function onClick() {\n      try {\n        let objects = null\n         ? undefined\n         : JSON.parse(localStorage.getItem(KEY)) || [];\n       objects.push(movieItem);\n       localStorage.setItem(KEY, JSON.stringify(objects));\n       \n       return remindBtn.disabled = true;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  \n  function savedMovie() {\n      try {\n        const itemLs = localStorage.getItem(KEY);\n        const parceLS = null ? undefined : JSON.parse(itemLs);\n        if (parceLS === null) {\n          return;\n        }\n        parceLS.map(elm => {\n          if (elm.id === movieItem.id) {\n            return remindBtn.disabled = true;\n          }\n        });\n    \n          } catch (error) {\n            console.error(error);\n          }\n        }\n         \n        savedMovie();\n      });\n    } catch{error => (console.log(error.message))};\n    };\n\n\n ","const body = document.querySelector('body');\nconst loader = document.createElement('div');\nconst spinner = document.createElement('div');\nloader.classList.add('isHidden');\nspinner.classList.add('spinner');\nloader.appendChild(spinner);\nbody.appendChild(loader);\n\nexport function startSpinner() {\n  loader.className = 'loader';\n}\nexport function stopSpinner() {\n  loader.className = 'isHidden';\n}\n"],"names":["parcelRequire","$7rYDH","$65414923e0a79c46$var$refs","galleryOfNewMovies","document","querySelector","$65414923e0a79c46$var$newMovies","default","async","$65414923e0a79c46$export$b31ccb6f873ec7de","res","genres","fetchGenres","min","max","UpcomingMovieRandom","Math","floor","random","resultsRandom","results","data","map","result","backdrop_path","original_title","release_date","vote_average","vote_count","popularity","genre_ids","overview","idGenre","nameGenres","i","length","item","find","el","id","push","name","title","imageUrl","formatDate","join","release","Date","getDate","getMonth","getFullYear","getFormatDate","voteAverage","voteCount","movieId","JSON","stringify","genreUp","slice","innerHTML","remindBtn","KEY","movieItem","poster_path","addEventListener","objects","parse","localStorage","getItem","setItem","disabled","error","console","itemLs","parceLS","elm","savedMovie","upcoming","then","catch","er","log","message","$bdfcdc80b4c38739$var$body","$bdfcdc80b4c38739$var$loader","createElement","$bdfcdc80b4c38739$var$spinner","classList","add","appendChild"],"version":3,"file":"index.c785f5b6.js.map"}