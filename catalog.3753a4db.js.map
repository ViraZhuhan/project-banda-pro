{"mappings":"oeAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,4BASA,MAAME,EAAY,IAAI,EAAAD,EAAAE,SAChBC,GAAO,EAAAC,EAAAF,WAEbC,EAAKE,WAAWC,iBAAiB,UAEjCC,eAAkCC,GAChCA,EAAEC,iBACF,MAAMC,EAAcP,EAAKQ,YAAYC,MAEjB,KAAhBF,GACFG,eAGEH,GAKNH,eAA4BO,GAC1B,IACE,MAAMC,QAAiBd,EAAUe,mBAAmBF,GACpDG,QAAQC,IAAIH,GACa,OAArBA,EAASI,SAAgD,IAA5BJ,EAASI,QAAQC,QAgBpDjB,EAAKkB,eAAeC,mBAClB,cACA,gIAhBEC,gBAGOR,EAASI,UAChBK,cAAcT,EAASI,QAAQM,MAAM,EAAG,KACxCC,0CAAsBZ,G,CAGxB,MAAOa,GACPC,a,EAnBAC,CAAanB,E","sources":["src/catalog.js","src/js/seachcatalog.js"],"sourcesContent":["import header from './js/header';\nimport mobileMenu from './js/mobile-menu';\nimport seachcatalog from './js/seachcatalog';\n// import weeklyTrends from './js/weekly-trends';\nimport modalMovie from './js/modal_movie';\n\nimport createWeekTrendsCatalog from './js/create-trends';\n","import Api from './api';\nimport { Loading } from 'notiflix';\n// import { initRatings } from './init-rating';\n// import { noFilmError, onFetchError } from './msg-error';\nimport getRefs from './components/get-refs';\n// import { genresList } from './components/genre-list';\n// import { createGallery, clearGallery } from './render-card';\n// import { updateGalleryBySearch } from './pagination-catalog';\n\nconst searchApi = new Api();\nconst refs = getRefs();\n\nrefs.searchForm.addEventListener('submit', onSearchFormSubmit);\n\nasync function onSearchFormSubmit(e) {\n  e.preventDefault();\n  const searchQuery = refs.searchInput.value;\n\n  if (searchQuery === '') {\n    onFetchError()\n  }\n \n  if (searchQuery) {\n    searchMovies(searchQuery);\n  }\n}\n\nasync function searchMovies(query) {\n  try {\n    const response = await searchApi.searchMovieByQuery(query);\n    console.log(response); //выводит результат поиска сколько нашел\n    if (response.results === null || response.results.length === 0) {\n      noSearchResults();\n      clearGallery();\n\n    }\n    else if (response.results) {\n      createGallery(response.results.slice(0, 10));\n      updateGalleryBySearch(query); // вызываем функцию обновления галереи по поиску с передачей запроса\n    }\n\n  } catch (error) {\n    noFilmError();\n  }\n}\n\nfunction noSearchResults() {\n  refs.galleryCatalog.insertAdjacentHTML(\n    \"beforebegin\",\n    `<p class=\"no-results\">\n  OOPS...<br />\n  We are very sorry!<br />\n  We don’t have any results due to your search.\n  </p>`\n  )\n}\n\n\n// export { onSearchFormSubmit };\nexport { onSearchFormSubmit, updateGalleryBySearch };  \n\n// Володя\n    \n// const axios = require('axios').default;\n\n// const API_KEY = '225e339996bc91260b33199c383c8881';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const URL_SEARCH_MOVIE = `${BASE_URL}/search/movie`;\n// const URL_GET_MOVIE = `${BASE_URL}/movie`;\n\n// const searchForm = document.querySelector('#search-form');\n// const searchInput = document.querySelector('#search-input');\n// const movieList = document.querySelector('#movie-list');\n// const prevButton = document.querySelector('#btn-back');\n// const nextButton = document.querySelector('#btn-next');\n\n// let currentPage = 1;\n// let totalPages = 1;\n\n// async function searchMovies(query, page = 1) {\n//   const response = await axios.get(URL_SEARCH_MOVIE, {\n//     params: {\n//       api_key: API_KEY,\n//       query,\n//       page,\n//     },\n//   });\n//   const { results, total_pages } = response.data;\n//   totalPages = total_pages;\n//   return results;\n// }\n\n// async function renderMovie(movie) {\n//   const movieGenre = await getGenre(movie.id);\n//   const movieYear = await getYear(movie.release_date);\n//   const imgSrc = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n//   return `<li class='cards__list'>\n//     <img src='${imgSrc}' alt='${movie.title}' width='395' height='574' />\n//     <div class=\"search__render\">\n//       <h3>${movie.title}</h3>\n//       <p>${movieGenre} <span>| ${movieYear}</span></p>\n//       <p>${movie.vote_average}</p>\n//     </div>\n//   </li>`;\n// }\n\n// async function getGenre(movieId) {\n//   const response = await axios.get(`${URL_GET_MOVIE}/${movieId}`, {\n//     params: {\n//       api_key: API_KEY,\n//     },\n//   });\n//   const genres = response.data.genres\n//     .slice(0, 2)\n//     .map(genre => genre.name)\n//     .join(', ');\n//   return genres;\n// }\n\n// function getYear(dateString) {\n//   return dateString ? dateString.slice(0, 10) : '';\n// }\n\n// // async function renderMovies(movies) {\n// //   let markup = '';\n// //   for (const movie of movies) {\n// //     if (!movie || !movie.poster_path) continue;\n// //     markup += await renderMovie(movie);\n// //   }\n// //   movieList.innerHTML = markup;\n// // }\n// async function renderMovies(movies) {\n//   let markup = '';\n//   if (movies.length === 0) {\n//     markup = \"<li class='cards__error'>OOPS...<br/>We are very sorry!<br/>We don’t have any results due to your search.</li > \";\n//   } else {\n//     for (const movie of movies) {\n//       if (!movie || !movie.poster_path) continue;\n//       markup += await renderMovie(movie);\n//     }\n//   }\n//   movieList.innerHTML = markup;\n// }\n\n\n// async function handleSearchFormSubmit(e) {\n//   e.preventDefault();\n//   const query = searchInput.value;\n//   const movies = await searchMovies(query);\n//   await renderMovies(movies);\n//   // currentPage = 1;\n// }\n\n// function handlePrevButtonClick() {\n//   if (currentPage > 1) {\n//     currentPage--;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// function handleNextButtonClick() {\n//   if (currentPage < totalPages) {\n//     currentPage++;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// searchForm.addEventListener('submit', handleSearchFormSubmit);\n// prevButton.addEventListener('click', handlePrevButtonClick);\n// nextButton.addEventListener('click', handleNextButtonClick);\n\n// async function renderWeekMovies() {\n//   const movies = await searchMovies('week');\n//   // await renderMovies(movies);\n// }\n\n// renderWeekMovies();\n\n   \n// const form = document.getElementById('search-form');\n// const input = document.getElementById('search-input');\n// const movieList = document.getElementById('movie-list');\n\n// form.addEventListener('submit', async (event) => {\n//   event.preventDefault();\n//   const searchQuery = input.value;\n//   movieList.innerHTML = '';\n//   try {\n//     Loading.pulse();\n//     const results = await searchApi.searchMovies(searchQuery);\n//     Loading.remove();\n//     if (results.length === 0) {\n//       const message = document.createElement('p');\n//       message.textContent = 'OOPS... We are very sorry! We don’t have any results due to your search.';\n//       movieList.appendChild(message);\n//     } else {\n//       results.forEach(result => {\n//         const movie = document.createElement('div');\n//         movie.classList.add('movie');\n//         movie.innerHTML = `\n//           <h2>${result.title}</h2>\n//           <img src=\"https://image.tmdb.org/t/p/w500${result.poster_path}\" alt=\"${result.title}\">\n//           <p>${result.overview}</p>\n//         `;\n//         movieList.appendChild(movie);\n//       });\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     Loading.remove();\n//     const message = document.createElement('p');\n//     message.textContent = 'Oops! Something went wrong.';\n//     movieList.appendChild(message);\n//   }\n// });\n\n\n// const form = document.getElementById('search-form');\n// const input = document.getElementById('search-input');\n// const movieList = document.getElementById('movie-list');\n// const MOVIE_URL = `https://api.themoviedb.org/3/`;\n// const API_KEY = '225e339996bc91260b33199c383c8881';\n\n// const searchForMovies = (apiKey, query) => {\n//   form.addEventListener('submit', (event) => {\n//     event.preventDefault();\n\n//     const searchQuery = input.value;\n\n//     // Clear the movie list\n//     movieList.innerHTML = '';\n\n//     // Call API to search for movies\n//     fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`)\n//       .then(response => response.json())\n//       .then(data => {\n//         if (data.total_results === 0) {\n//           // No results found\n//           const message = document.createElement('p');\n//           message.textContent = 'OOPS... We are very sorry! We don’t have any results due to your search.';\n//           movieList.appendChild(message);\n//         } else {\n//           // Results found\n//           const results = data.results;\n//           results.forEach(result => {\n//             const movie = document.createElement('div');\n//             movie.classList.add('movie');\n//             movie.innerHTML = `\n//               <h2>${result.title}</h2>\n//               <img src=\"https://image.tmdb.org/t/p/w500${result.poster_path}\" alt=\"${result.title}\">\n//               <p>${result.overview}</p>\n//             `;\n//             movieList.appendChild(movie);\n//           });\n//         }\n//       })\n//       .catch(error => {\n//         console.error(error);\n//         const message = document.createElement('p');\n//         message.textContent = 'Oops! Something went wrong.';\n//         movieList.appendChild(message);\n//       });\n//   });\n// }\n// // Example usage:\n// searchForMovies('YOUR_API_KEY', '225e339996bc91260b33199c383c8881')\n\n// Ілона\n\n// const axios = require('axios').default;\n\n// const API_KEY = '225e339996bc91260b33199c383c8881';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const URL_SEARCH_MOVIE = `${BASE_URL}/search/movie`;\n// const URL_GET_MOVIE = `${BASE_URL}/movie`;\n\n// const searchForm = document.querySelector('#search-form');\n// const searchInput = document.querySelector('#search-input');\n// const movieList = document.querySelector('#movie-list');\n// const prevButton = document.querySelector('#btn-back');\n// const nextButton = document.querySelector('#btn-next');\n\n// let currentPage = 1;\n// let totalPages = 1;\n\n// async function searchMovies(query, page = 1) {\n//   const response = await axios.get(URL_SEARCH_MOVIE, {\n//     params: {\n//       api_key: API_KEY,\n//       query,\n//       page,\n//     },\n//   });\n//   const { results, total_pages } = response.data;\n//   totalPages = total_pages;\n//   return results;\n// }\n\n// async function renderMovie(movie) {\n//   const movieGenre = await getGenre(movie.id);\n//   const movieYear = await getYear(movie.release_date);\n//   const imgSrc = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n//   return `<li class='cards__list'>\n//     <img src='${imgSrc}' alt='${movie.title}' width='395' height='574' />\n//     <div class=\"search__render\">\n//       <h3>${movie.title}</h3>\n//       <p>${movieGenre} <span>| ${movieYear}</span></p>\n//       <p>${movie.vote_average}</p>\n//     </div>\n//   </li>`;\n// }\n\n// async function getGenre(movieId) {\n//   const response = await axios.get(`${URL_GET_MOVIE}/${movieId}`, {\n//     params: {\n//       api_key: API_KEY,\n//     },\n//   });\n//   const genres = response.data.genres\n//     .slice(0, 2)\n//     .map(genre => genre.name)\n//     .join(', ');\n//   return genres;\n// }\n\n// function getYear(dateString) {\n//   return dateString ? dateString.slice(0, 4) : '';\n// }\n\n// async function renderMovies(movies) {\n//   let markup = '';\n//   for (const movie of movies) {\n//     if (!movie || !movie.poster_path) continue;\n//     markup += await renderMovie(movie);\n//   }\n//   movieList.innerHTML = markup;\n// }\n\n// async function handleSearchFormSubmit(e) {\n//   e.preventDefault();\n//   const query = searchInput.value;\n//   const movies = await searchMovies(query);\n//   await renderMovies(movies);\n//   currentPage = 1;\n// }\n\n// function handlePrevButtonClick() {\n//   if (currentPage > 1) {\n//     currentPage--;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// function handleNextButtonClick() {\n//   if (currentPage < totalPages) {\n//     currentPage++;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// searchForm.addEventListener('submit', handleSearchFormSubmit);\n// prevButton.addEventListener('click', handlePrevButtonClick);\n// nextButton.addEventListener('click', handleNextButtonClick);\n\n// async function renderWeekMovies() {\n//   const movies = await searchMovies('week');\n//   await renderMovies(movies);\n// }\n\n// renderWeekMovies();\n"],"names":["parcelRequire","$7rYDH","$0601c888d970c625$var$searchApi","default","$0601c888d970c625$var$refs","$dbTx9","searchForm","addEventListener","async","e","preventDefault","searchQuery","searchInput","value","onFetchError","query","response","searchMovieByQuery","console","log","results","length","galleryCatalog","insertAdjacentHTML","clearGallery","createGallery","slice","$0601c888d970c625$export$898dff13ce38b484","error","noFilmError","$0601c888d970c625$var$searchMovies"],"version":3,"file":"catalog.3753a4db.js.map"}