{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-2cc0f71595736429.js","src/catalog.js","src/js/hero-home.js","src/js/hero-trailer.js","node_modules/@parcel/runtime-js/lib/runtime-1e63867b6d018763.js","node_modules/@parcel/runtime-js/lib/runtime-2fb590c23d15ba3c.js","node_modules/@parcel/runtime-js/lib/runtime-1bbf0927ef5b6dfd.js","node_modules/@parcel/runtime-js/lib/runtime-737aa6007e18bda6.js","node_modules/@parcel/runtime-js/lib/runtime-2be1130d24b21dbe.js","node_modules/@parcel/runtime-js/lib/runtime-cf6bd82511790ff7.js","src/js/seachcatalog.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gin8l\\\":\\\"catalog.2c5e2b9f.js\\\",\\\"jZjxc\\\":\\\"hero-black-desk.9dbbb261.png\\\",\\\"eplbB\\\":\\\"hero-black-tab.f76a53e2.png\\\",\\\"8ziCT\\\":\\\"hero-white-desk.d501c5f4.png\\\",\\\"1dO0z\\\":\\\"hero-white-tab.1a2e71a7.png\\\",\\\"5xeg8\\\":\\\"modal-empty-des_x1.a9269486.png\\\",\\\"hDwdT\\\":\\\"hero-home-desk.783caea1.jpg\\\",\\\"8OEnV\\\":\\\"index.2561f777.js\\\",\\\"hfX1u\\\":\\\"index.96471dca.js\\\"}\"));","import header from './js/header';\nimport mobileMenu from './js/mobile-menu';\nimport themeToggle from './js/themeToggle';\nimport './js/hero-home';\nimport onSearchFormSubmit from './js/seachcatalog';\n// import weeklyTrends from './js/weekly-trends';\nimport modalMovie from './js/modal_movie';\nimport createWeekTrendsCatalog from './js/create-trends';\n","import Api from './api';\n\nimport { onOpenHeroModal } from './hero-trailer';\n// import { initRatings } from './init-rating';\n\nconst refs = {\n  heroRef: document.querySelector('.hero'),\n  heroWrapperRef: document.querySelector('.hero__wrapper'),\n};\n\nconst root = document.documentElement;\n\nimport SubstructBlackDesk from '../images/hero-black-desk.png';\nimport SubstructBlackTab from '../images/hero-black-tab.png';\nimport SubstructWhiteDesk from '../images/hero-white-desk.png';\nimport SubstructWhiteTab from '../images/hero-white-tab.png';\nimport homePageBg from '../images/hero-home-desk.jpg';\n\nconst pageHeroApi = new Api();\n\ngetDayMovieTrend();\n\nasync function getDayMovieTrend() {\n  try {\n    const response = await pageHeroApi.dayTrends();\n    const random = Math.floor(Math.random() * response.results.length);\n\n    renderHeroPageMarkup(response.results[random]);\n  } catch (err) {\n    renderDefaultMarkup();\n  }\n}\n\nexport { getDayMovieTrend, renderHeroPageMarkup };\n\nfunction renderDefaultMarkup() {\n  refs.heroWrapperRef.innerHTML = `\n    <h1 class=\"hero__title\">Let’s Make Your Own Cinema</h1>\n  <p class=\"hero__text\">Is a guide to creating a personalized movie theater experience.\n   You'll need a projector, screen, and speakers.<span class=\"paragraph__hidden\">Decorate your space,\n   choose your films, and stock up on snacks for the full experience.</span></p>\n   <a href=\"/src/catalog.html\" class=\"hero__btn\">Get Started</a>\n   `;\n\n  changeHeroBackground(homePageBg);\n}\n\nfunction renderHeroPageMarkup({\n  backdrop_path,\n  original_title,\n  overview,\n  vote_average,\n}) {\n  const url = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n\n  refs.heroWrapperRef.innerHTML = `\n    <h1 class=\"hero__title\">${original_title}</h1>\n    <div class=\"rating hero__vote\">\n      <div class=\"rating__body\">\n        <div class=\"rating__active\" style=\"width: ${vote_average * 10}%;\"></div>\n        <div class=\"rating__items hero__vote\">\n          <input type=\"radio\" class=\"rating__item\" value=\"1\" name=\"rating\" />\n          <input type=\"radio\" class=\"rating__item\" value=\"2\" name=\"rating\" />\n          <input type=\"radio\" class=\"rating__item\" value=\"3\" name=\"rating\" />\n          <input type=\"radio\" class=\"rating__item\" value=\"4\" name=\"rating\" />\n          <input type=\"radio\" class=\"rating__item\" value=\"5\" name=\"rating\" />\n        </div>\n      </div>\n      <div class=\"rating__value\">${vote_average}</div>\n    </div>\n    <p class=\"hero__text hero__movie-descripton\">${overview}</p>\n    <button class=\"hero__btn\">Watch trailer</button>\n   `;\n\n  changeHeroBackground(url);\n\n  const watchMovieTrailerBtn = document.querySelector('.hero__btn');\n  watchMovieTrailerBtn.addEventListener('click', onOpenHeroModal);\n}\n\nfunction changeHeroBackground(bgImg) {\n  if (window.matchMedia('(min-width: 1280px)').matches) {\n    const bgDecorator = root.classList.contains('light')\n      ? SubstructWhiteDesk\n      : SubstructBlackDesk;\n    refs.heroRef.style.backgroundImage = `url('${bgDecorator}'), url('${bgImg}')`;\n  } else if (window.matchMedia('(min-width: 768px)').matches) {\n    const bgDecorator = root.classList.contains('light')\n      ? SubstructWhiteTab\n      : SubstructBlackTab;\n    refs.heroRef.style.backgroundImage = `url('${bgDecorator}'), url('${bgImg}')`;\n  } else {\n    refs.heroRef.style.backgroundImage = `linear-gradient(\n      87.8deg,\n      #0e0e0e 15.61%,\n      rgba(14, 14, 14, 0) 60.39%\n    ), url('${bgImg}')`;\n  }\n\n  window.addEventListener('resize', onPageChangeSize);\n\n  function onPageChangeSize(e) {\n    const currentPageWidth = e.currentTarget.innerWidth;\n    if (currentPageWidth >= 1280) {\n      const bgDecorator = root.classList.contains('light')\n        ? SubstructWhiteDesk\n        : SubstructBlackDesk;\n      refs.heroRef.style.backgroundImage = `url('${bgDecorator}'), url('${bgImg}')`;\n    } else if (currentPageWidth >= 768) {\n      const bgDecorator = root.classList.contains('light')\n        ? SubstructWhiteTab\n        : SubstructBlackTab;\n      refs.heroRef.style.backgroundImage = `url('${bgDecorator}'), url('${bgImg}')`;\n    } else if (currentPageWidth < 768) {\n      refs.heroRef.style.backgroundImage = `linear-gradient(\n      87.8deg,\n      #0e0e0e 15.61%,\n      rgba(14, 14, 14, 0) 60.39%\n    ), url('${bgImg}')`;\n    }\n  }\n}\n","import Api from './api';\nimport oopsImg from '../images/modal-empty-des_x1.png';\n\nconst refs = {\n  heroModal: document.querySelector('.hero__modal'),\n  modalWrapperRef: document.querySelector('.hero__modal-wrapper'),\n  overlay: document.querySelector('.hero__overlay'),\n  heroBtnCloseRef: document.querySelector('.hero__close-btn'),\n};\n\nrefs.heroBtnCloseRef.addEventListener('click', onCloseHeroModal);\nrefs.overlay.addEventListener('click', onClickOverlay);\n\nconst api = new Api();\n\nlet currentId;\n\nfunction onClickOverlay(event) {\n  if (event.target === event.currentTarget) {\n    onCloseHeroModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') {\n    onCloseHeroModal();\n  }\n}\n\nfunction onOpenHeroModal() {\n  if (refs.modalWrapperRef.innerHTML === '') {\n    getCurrentMovieTrailer(currentId);\n  }\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.heroModal.classList.add('active');\n  refs.overlay.classList.add('active');\n}\nfunction onCloseHeroModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n  refs.heroModal.classList.remove('active');\n  refs.overlay.classList.remove('active');\n  refs.modalWrapperRef.innerHTML = '';\n}\n\nasync function getCurrentMovieTrailer(id) {\n  try {\n    const response = await api.getDetailsById(id);\n    findMovieTrailer(response.results);\n  } catch (err) {\n    addBasicHeroModalMarkup();\n  }\n}\n\nfunction findMovieTrailer(videos) {\n  const trailer = videos.find(video => video.type === 'Trailer');\n\n  if (trailer) {\n    \n    addTrailerOnModal(trailer);\n  } else {\n    addBasicHeroModalMarkup();\n  }\n}\n\nfunction addBasicHeroModalMarkup() {\n  const modalMarkup = `<div class=\"hero__box-trailer\">\n      <p class=\"hero__text-trailer\">OOPS...</p>\n      <p class=\"hero__text-trailer\">We are very sorry!</p>\n      <p class=\"hero__text-trailer\">But we couldn’t find the trailer.</p>\n    </div>\n    <img class=\"hero__img-trailer\" src=\"${oopsImg}\" alt=\"Cinema\" />\n  </div>`;\n\n  refs.modalWrapperRef.innerHTML = modalMarkup;\n}\n\nfunction addTrailerOnModal({ key }) {\n  const modalMarkup = `<iframe class='player'\n        width=\"100%\"\n        height=\"100%\"\n        src=\"https://www.youtube.com/embed/${key}\"\n        title=\"YouTube video player\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n        allowfullscreen\n      ></iframe>`;\n\n  refs.modalWrapperRef.innerHTML = modalMarkup;\n}\n\nexport { onOpenHeroModal };\n","module.exports = require('./helpers/bundle-url').getBundleURL('gin8l') + require('./helpers/bundle-manifest').resolve(\"5xeg8\");","module.exports = require('./helpers/bundle-url').getBundleURL('gin8l') + require('./helpers/bundle-manifest').resolve(\"jZjxc\");","module.exports = require('./helpers/bundle-url').getBundleURL('gin8l') + require('./helpers/bundle-manifest').resolve(\"eplbB\");","module.exports = require('./helpers/bundle-url').getBundleURL('gin8l') + require('./helpers/bundle-manifest').resolve(\"8ziCT\");","module.exports = require('./helpers/bundle-url').getBundleURL('gin8l') + require('./helpers/bundle-manifest').resolve(\"1dO0z\");","module.exports = require('./helpers/bundle-url').getBundleURL('gin8l') + require('./helpers/bundle-manifest').resolve(\"hDwdT\");","import Api from './api';\nimport { initRatings } from './init-rating';\nimport { noFilmError, onFetchError } from './components/msg-error';\nimport getRefs from './components/get-refs';\nimport { genresList } from './components/genre-list';\nimport { createGallery, clearGallery } from './render-card';\n\nconst searchApi = new Api();\nconst refs = getRefs();\n\nrefs.searchForm.addEventListener('submit', onSearchFormSubmit);\n\nasync function onSearchFormSubmit(e) {\n  e.preventDefault();\n  const searchQuery = refs.searchInput.value;\n\n  if (searchQuery === '') {\n    onFetchError()\n  }\n \n  if (searchQuery) {\n    searchMovies(searchQuery);\n  }\n}\n\nasync function searchMovies(query) {\n  try {\n    const response = await searchApi.searchMovieByQuery(query);\n\n    if (response.results === null || response.results.length === 0) {\n      noSearchResults();\n      clearGallery();\n\n    }\n    else if (response.results) {\n      createGallery(response.results.slice(0, 10));\n    }\n\n  } catch (error) {\n    noFilmError();\n  }\n}\n\nfunction noSearchResults() {\n  refs.galleryCatalog.insertAdjacentHTML(\n    \"beforebegin\",\n    `<p class=\"no-results\">\n  OOPS...<br />\n  We are very sorry!<br />\n  We don’t have any results due to your search.\n  </p>`\n  )\n}\n\n\nexport { onSearchFormSubmit };\n\n// Володя\n    \n// const axios = require('axios').default;\n\n// const API_KEY = '225e339996bc91260b33199c383c8881';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const URL_SEARCH_MOVIE = `${BASE_URL}/search/movie`;\n// const URL_GET_MOVIE = `${BASE_URL}/movie`;\n\n// const searchForm = document.querySelector('#search-form');\n// const searchInput = document.querySelector('#search-input');\n// const movieList = document.querySelector('#movie-list');\n// const prevButton = document.querySelector('#btn-back');\n// const nextButton = document.querySelector('#btn-next');\n\n// let currentPage = 1;\n// let totalPages = 1;\n\n// async function searchMovies(query, page = 1) {\n//   const response = await axios.get(URL_SEARCH_MOVIE, {\n//     params: {\n//       api_key: API_KEY,\n//       query,\n//       page,\n//     },\n//   });\n//   const { results, total_pages } = response.data;\n//   totalPages = total_pages;\n//   return results;\n// }\n\n// async function renderMovie(movie) {\n//   const movieGenre = await getGenre(movie.id);\n//   const movieYear = await getYear(movie.release_date);\n//   const imgSrc = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n//   return `<li class='cards__list'>\n//     <img src='${imgSrc}' alt='${movie.title}' width='395' height='574' />\n//     <div class=\"search__render\">\n//       <h3>${movie.title}</h3>\n//       <p>${movieGenre} <span>| ${movieYear}</span></p>\n//       <p>${movie.vote_average}</p>\n//     </div>\n//   </li>`;\n// }\n\n// async function getGenre(movieId) {\n//   const response = await axios.get(`${URL_GET_MOVIE}/${movieId}`, {\n//     params: {\n//       api_key: API_KEY,\n//     },\n//   });\n//   const genres = response.data.genres\n//     .slice(0, 2)\n//     .map(genre => genre.name)\n//     .join(', ');\n//   return genres;\n// }\n\n// function getYear(dateString) {\n//   return dateString ? dateString.slice(0, 10) : '';\n// }\n\n// // async function renderMovies(movies) {\n// //   let markup = '';\n// //   for (const movie of movies) {\n// //     if (!movie || !movie.poster_path) continue;\n// //     markup += await renderMovie(movie);\n// //   }\n// //   movieList.innerHTML = markup;\n// // }\n// async function renderMovies(movies) {\n//   let markup = '';\n//   if (movies.length === 0) {\n//     markup = \"<li class='cards__error'>OOPS...<br/>We are very sorry!<br/>We don’t have any results due to your search.</li > \";\n//   } else {\n//     for (const movie of movies) {\n//       if (!movie || !movie.poster_path) continue;\n//       markup += await renderMovie(movie);\n//     }\n//   }\n//   movieList.innerHTML = markup;\n// }\n\n\n// async function handleSearchFormSubmit(e) {\n//   e.preventDefault();\n//   const query = searchInput.value;\n//   const movies = await searchMovies(query);\n//   await renderMovies(movies);\n//   // currentPage = 1;\n// }\n\n// function handlePrevButtonClick() {\n//   if (currentPage > 1) {\n//     currentPage--;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// function handleNextButtonClick() {\n//   if (currentPage < totalPages) {\n//     currentPage++;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// searchForm.addEventListener('submit', handleSearchFormSubmit);\n// prevButton.addEventListener('click', handlePrevButtonClick);\n// nextButton.addEventListener('click', handleNextButtonClick);\n\n// async function renderWeekMovies() {\n//   const movies = await searchMovies('week');\n//   // await renderMovies(movies);\n// }\n\n// renderWeekMovies();\n\n   \n// const form = document.getElementById('search-form');\n// const input = document.getElementById('search-input');\n// const movieList = document.getElementById('movie-list');\n\n// form.addEventListener('submit', async (event) => {\n//   event.preventDefault();\n//   const searchQuery = input.value;\n//   movieList.innerHTML = '';\n//   try {\n//     Loading.pulse();\n//     const results = await searchApi.searchMovies(searchQuery);\n//     Loading.remove();\n//     if (results.length === 0) {\n//       const message = document.createElement('p');\n//       message.textContent = 'OOPS... We are very sorry! We don’t have any results due to your search.';\n//       movieList.appendChild(message);\n//     } else {\n//       results.forEach(result => {\n//         const movie = document.createElement('div');\n//         movie.classList.add('movie');\n//         movie.innerHTML = `\n//           <h2>${result.title}</h2>\n//           <img src=\"https://image.tmdb.org/t/p/w500${result.poster_path}\" alt=\"${result.title}\">\n//           <p>${result.overview}</p>\n//         `;\n//         movieList.appendChild(movie);\n//       });\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     Loading.remove();\n//     const message = document.createElement('p');\n//     message.textContent = 'Oops! Something went wrong.';\n//     movieList.appendChild(message);\n//   }\n// });\n\n\n// const form = document.getElementById('search-form');\n// const input = document.getElementById('search-input');\n// const movieList = document.getElementById('movie-list');\n// const MOVIE_URL = `https://api.themoviedb.org/3/`;\n// const API_KEY = '225e339996bc91260b33199c383c8881';\n\n// const searchForMovies = (apiKey, query) => {\n//   form.addEventListener('submit', (event) => {\n//     event.preventDefault();\n\n//     const searchQuery = input.value;\n\n//     // Clear the movie list\n//     movieList.innerHTML = '';\n\n//     // Call API to search for movies\n//     fetch(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`)\n//       .then(response => response.json())\n//       .then(data => {\n//         if (data.total_results === 0) {\n//           // No results found\n//           const message = document.createElement('p');\n//           message.textContent = 'OOPS... We are very sorry! We don’t have any results due to your search.';\n//           movieList.appendChild(message);\n//         } else {\n//           // Results found\n//           const results = data.results;\n//           results.forEach(result => {\n//             const movie = document.createElement('div');\n//             movie.classList.add('movie');\n//             movie.innerHTML = `\n//               <h2>${result.title}</h2>\n//               <img src=\"https://image.tmdb.org/t/p/w500${result.poster_path}\" alt=\"${result.title}\">\n//               <p>${result.overview}</p>\n//             `;\n//             movieList.appendChild(movie);\n//           });\n//         }\n//       })\n//       .catch(error => {\n//         console.error(error);\n//         const message = document.createElement('p');\n//         message.textContent = 'Oops! Something went wrong.';\n//         movieList.appendChild(message);\n//       });\n//   });\n// }\n// // Example usage:\n// searchForMovies('YOUR_API_KEY', '225e339996bc91260b33199c383c8881')\n\n// Ілона\n\n// const axios = require('axios').default;\n\n// const API_KEY = '225e339996bc91260b33199c383c8881';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n// const URL_SEARCH_MOVIE = `${BASE_URL}/search/movie`;\n// const URL_GET_MOVIE = `${BASE_URL}/movie`;\n\n// const searchForm = document.querySelector('#search-form');\n// const searchInput = document.querySelector('#search-input');\n// const movieList = document.querySelector('#movie-list');\n// const prevButton = document.querySelector('#btn-back');\n// const nextButton = document.querySelector('#btn-next');\n\n// let currentPage = 1;\n// let totalPages = 1;\n\n// async function searchMovies(query, page = 1) {\n//   const response = await axios.get(URL_SEARCH_MOVIE, {\n//     params: {\n//       api_key: API_KEY,\n//       query,\n//       page,\n//     },\n//   });\n//   const { results, total_pages } = response.data;\n//   totalPages = total_pages;\n//   return results;\n// }\n\n// async function renderMovie(movie) {\n//   const movieGenre = await getGenre(movie.id);\n//   const movieYear = await getYear(movie.release_date);\n//   const imgSrc = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n//   return `<li class='cards__list'>\n//     <img src='${imgSrc}' alt='${movie.title}' width='395' height='574' />\n//     <div class=\"search__render\">\n//       <h3>${movie.title}</h3>\n//       <p>${movieGenre} <span>| ${movieYear}</span></p>\n//       <p>${movie.vote_average}</p>\n//     </div>\n//   </li>`;\n// }\n\n// async function getGenre(movieId) {\n//   const response = await axios.get(`${URL_GET_MOVIE}/${movieId}`, {\n//     params: {\n//       api_key: API_KEY,\n//     },\n//   });\n//   const genres = response.data.genres\n//     .slice(0, 2)\n//     .map(genre => genre.name)\n//     .join(', ');\n//   return genres;\n// }\n\n// function getYear(dateString) {\n//   return dateString ? dateString.slice(0, 4) : '';\n// }\n\n// async function renderMovies(movies) {\n//   let markup = '';\n//   for (const movie of movies) {\n//     if (!movie || !movie.poster_path) continue;\n//     markup += await renderMovie(movie);\n//   }\n//   movieList.innerHTML = markup;\n// }\n\n// async function handleSearchFormSubmit(e) {\n//   e.preventDefault();\n//   const query = searchInput.value;\n//   const movies = await searchMovies(query);\n//   await renderMovies(movies);\n//   currentPage = 1;\n// }\n\n// function handlePrevButtonClick() {\n//   if (currentPage > 1) {\n//     currentPage--;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// function handleNextButtonClick() {\n//   if (currentPage < totalPages) {\n//     currentPage++;\n//     renderMovies(searchInput.value, currentPage);\n//   }\n// }\n\n// searchForm.addEventListener('submit', handleSearchFormSubmit);\n// prevButton.addEventListener('click', handlePrevButtonClick);\n// nextButton.addEventListener('click', handleNextButtonClick);\n\n// async function renderWeekMovies() {\n//   const movies = await searchMovies('week');\n//   await renderMovies(movies);\n// }\n\n// renderWeekMovies();\n"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$ef7665556f66281e$exports","getBundleURL","resolve","$e8fe59ab47db51a9$var$refs","heroModal","document","querySelector","modalWrapperRef","overlay","heroBtnCloseRef","addEventListener","$e8fe59ab47db51a9$var$onCloseHeroModal","event","target","currentTarget","$e8fe59ab47db51a9$var$api","$b7ONl","default","$e8fe59ab47db51a9$var$onEscKeyPress","code","$e8fe59ab47db51a9$export$c09279b9398acccf","innerHTML","id","$e8fe59ab47db51a9$var$_getCurrentMovieTrailer","apply","this","arguments","$e8fe59ab47db51a9$var$getCurrentMovieTrailer","$e8fe59ab47db51a9$var$currentId","window","classList","add","removeEventListener","remove","$parcel$interopDefault","$2TvXO","mark","_callee","getDetailsById","$e8fe59ab47db51a9$var$findMovieTrailer","_ctx","sent","results","$e8fe59ab47db51a9$var$addBasicHeroModalMarkup","videos","key","modalMarkup","trailer","find","video","type","concat","$6ce9854c0b276c96$exports","$5efba09380bb3942$exports","$72a854f777d2e296$exports","$a69f00495b3c422c$exports","$dc48016afeec7bd0$exports","$152010e4226efe6b$var$refs","heroRef","heroWrapperRef","$152010e4226efe6b$var$root","documentElement","$152010e4226efe6b$var$pageHeroApi","$152010e4226efe6b$var$_getDayMovieTrend","response","random","dayTrends","Math","floor","length","$152010e4226efe6b$export$2856509fda755fde","$152010e4226efe6b$var$renderDefaultMarkup","$152010e4226efe6b$var$changeHeroBackground","param","backdrop_path","original_title","overview","vote_average","url","bgImg","matchMedia","matches","bgDecorator","contains","style","backgroundImage","bgDecorator1","e","currentPageWidth","innerWidth","bgDecorator2","$152010e4226efe6b$export$d8e5cbd46a41726b","$4bf6a4821dfe0cdf$var$searchApi","$4bf6a4821dfe0cdf$var$refs","$8nXZc","$4bf6a4821dfe0cdf$var$_onSearchFormSubmit","searchQuery","preventDefault","searchInput","value","$2V7fS","onFetchError","$4bf6a4821dfe0cdf$var$searchMovies","query","$4bf6a4821dfe0cdf$var$_searchMovies","searchMovieByQuery","$4bf6a4821dfe0cdf$var$noSearchResults","$cwHAv","clearGallery","createGallery","slice","noFilmError","galleryCatalog","insertAdjacentHTML","searchForm"],"version":3,"file":"catalog.2c5e2b9f.js.map"}